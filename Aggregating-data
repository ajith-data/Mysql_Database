--Aggregation functions are used to perform calculations on multiple rows of a tableâ€™s column and return a single value.
Example Table:
| emp\_id | name    | department | salary | joining\_date |
| ------- | ------- | ---------- | ------ | ------------- |
| 1       | Alice   | HR         | 50000  | 2019-01-15    |
| 2       | Bob     | Sales      | 60000  | 2018-03-22    |
| 3       | Charlie | IT         | 70000  | 2020-06-12    |
| 4       | David   | Sales      | 55000  | 2019-11-08    |
| 5       | Eva     | IT         | 72000  | 2021-04-01    |
| 6       | Frank   | HR         | 48000  | 2017-09-14    |
| 7       | Grace   | Sales      | 62000  | 2022-01-10    |
| 8       | Henry   | IT         | 71000  | 2018-12-30    |

1. COUNT()
  Use: To find how many records exist or match a certain condition.
Example query:
  SELECT COUNT(*) FROM employees;
Output:
| COUNT(\*) |
| --------- |
| 8         |


2. SUM()
  Use:To find out totals, like total salary or total sales.
Example query:
  SELECT SUM(salary) FROM employees;
Output:
| SUM(salary) |
| ----------- |
| 488000      |


3. AVG()  
  Use: To find out the average salary, average sales, or any other mean value.
Example query:
  SELECT AVG(salary) FROM employees;
Output:
| AVG(salary) |
| ----------- |
| 61000       |


4. MIN()
  Use:To find the lowest salary, earliest joining date.
Example query:
  SELECT MIN(salary) FROM employees;
Output:
| MIN(salary) |
| ----------- |
| 48000       |

5. MAX()
  Use: To find the highest salary, latest joining date.
Example query:
  SELECT MAX(salary) FROM employees;
Output:
| MAX(salary) |
| ----------- |
| 72000       |

6. GROUP BY
  Use:To perform aggregation on groups, like salary totals per department.
Example query:
  SELECT department, SUM(salary)
  FROM employees
  GROUP BY department;
Output:
| department | SUM(salary) |
| ---------- | ----------- |
| HR         | 98000       |
| Sales      | 177000      |
| IT         | 213000      |

7. HAVING
  Use:To filter results after aggregation (because WHERE cannot be used with aggregated data).
Example query:
  SELECT department, SUM(salary)
  FROM employees
  GROUP BY department
  HAVING SUM(salary) > 100000;
Output:
| department | SUM(salary) |
| ---------- | ----------- |
| Sales      | 177000      |
| IT         | 213000      |
